------------------------------------------------------------------------------

Update the README to explain how to use the Maven plugin.

------------------------------------------------------------------------------

Change the sample project to use the invoker plugin:
http://maven.apache.org/plugins/maven-invoker-plugin/

------------------------------------------------------------------------------

Change directory structure for XSLT files, to for example:

   xslt/
   xslt/code/
   xslt/code/log4j/
   xslt/docs/
   xslt/docs/html/

------------------------------------------------------------------------------

Add another sample project that uses an Ant task.

------------------------------------------------------------------------------

Group the sample projects under one directory.

------------------------------------------------------------------------------

Include sources and javadoc when deploying.

------------------------------------------------------------------------------

Add an automated test for the Ant task. See:
http://ant.apache.org/manual/antexternal.html

------------------------------------------------------------------------------

Add an automated test for the Maven task.

------------------------------------------------------------------------------

Fix bug: Currently the code generated from the Maven plugin goes below
target/site/.

The offending piece of code is:

    /**
     * @parameter alias="out" expression="${basedir}/target/site/logdoc"
     * @required
     */
    private File _codeTargetDir;

------------------------------------------------------------------------------

Automatically add the znerd-logdoc dependency to projects that use the 
Maven plugin. If possible.

------------------------------------------------------------------------------

Introduce Log4JBridge do the actual logging. Let the generated code use it.

------------------------------------------------------------------------------

Introduce AtgLogBridge do the actual logging. Let the generated code use it.

------------------------------------------------------------------------------

Document the cause and resolution in the generated documentation.

------------------------------------------------------------------------------

Do not require a translation for all log messages. If no translation is
available, then fall back to a default format that displays the parameters in
a quoted form. E.g.:

   10202 transaction="FNC-5569"; label=null; grtID=null; grxID="1233890-22"

------------------------------------------------------------------------------

Simplify the XSLT and the resulting generated code.

------------------------------------------------------------------------------

Combine a lot of the XSLT in log4j/ and atg/.

------------------------------------------------------------------------------

Print the Logdoc version when logging at INFO level. So for example when
using:

   ant -verbose

------------------------------------------------------------------------------

Separate Maven plugins:
- one Mojo for generating code
- one Mojo for generating documentation

------------------------------------------------------------------------------

Let the Maven plugin put the generated documentation in the correct location.

------------------------------------------------------------------------------

Only allow 'exceptionClass' attribute if 'exception' attribute is also set.

------------------------------------------------------------------------------

Change directory structure for XSLT files, to for example:

   xslt/
   xslt/code/
   xslt/code/log4j/
   xslt/docs/
   xslt/docs/html/

------------------------------------------------------------------------------

Refactor LogDef class, remove XSLT transformation functionality.

------------------------------------------------------------------------------

Share the same versions of plugins across all pom.xml files.

------------------------------------------------------------------------------

Make the automated test that tests the Logdoc version work.

------------------------------------------------------------------------------

Support the Java Logging Framework as a 'loggingFramework'.
See http://java.sun.com/javase/6/docs/technotes/guides/logging/

------------------------------------------------------------------------------

Make the Java Logging Framework the default 'loggingFramework' ?

------------------------------------------------------------------------------

Support custom code generation, letting the user specify how to generate code.
This requires the user to provide XSLT.

------------------------------------------------------------------------------

Consider applying as an Apache project.

------------------------------------------------------------------------------

Consider moving all filter-related classes to a separate 'filter' package.
This may not be the best option, though.

------------------------------------------------------------------------------
